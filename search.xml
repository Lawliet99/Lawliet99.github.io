<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mac M1的jdk问题</title>
      <link href="/2022/01/13/mac%20M1%E7%9A%84jdk%E9%97%AE%E9%A2%98/"/>
      <url>/2022/01/13/mac%20M1%E7%9A%84jdk%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>用了两年的拯救者最近老是卡顿，稍微开多点网页就卡起来了，实在是影响挖洞的心情。这两个月挖src攒了点钱，就想换个电脑。有师傅给我推荐mac，正好想试试苹果的产品，就入了个mbp。用了几天，体验还不错，感觉流畅度确实舒服，但是使用习惯完全跟win颠覆了，还是得慢慢适应。出现问题最多的还是一些软件的适配，一些工具的问题就搞了好久，有点烦，今天说说jdk的问题。<br>​</p><p>搞安全的用java的工具还是非常多的，bp、冰蝎等都是java的，然而最近装个新版本的bp得用高版本的java运行，前两天用到shiro工具又需要低版本java运行。在mac上装两个jdk问题倒不是很大，网上很多文章可以参考<br>如<a href="https://blog.csdn.net/qq_41852212/article/details/121913961">https://blog.csdn.net/qq_41852212/article/details/121913961</a><br>​</p><p>但是m1芯片是arm架构的，网上搜到的基本都是安装arm版的jdk。目前只有zulu推出了mac arm版的jdk8。但是这种jdk打不开我需要使用的工具。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1642514978634-d9be1f41-ddf8-4719-a3be-a153b7fb62a7.png#clientId=ufad5da42-d587-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=312&id=ue0b0b680&margin=%5Bobject%20Object%5D&name=image.png&originHeight=624&originWidth=1782&originalType=binary&ratio=1&rotation=0&showTitle=false&size=288803&status=done&style=none&taskId=u31bdd491-79cc-423c-908c-abde2d07661&title=&width=891" alt="image.png"><br>后来尝试直接去oracle官网搜jdk<br>直接用x64的mac jdk进行安装<br>发现可以成功运行<br><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1642515111233-e89b3ffa-eaf2-4449-b57d-5b681fd238fd.png#clientId=ufad5da42-d587-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=601&id=u56e560df&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1202&originWidth=1820&originalType=binary&ratio=1&rotation=0&showTitle=false&size=635685&status=done&style=none&taskId=uc984b261-5de7-4e32-8bcc-9175da53615&title=&width=910" alt="image.png"><br>不想注册oracle账号的可以在下面这个网站下载<br><a href="http://www.codebaoku.com/jdk/jdk-oracle-jdk1-8.html">http://www.codebaoku.com/jdk/jdk-oracle-jdk1-8.html</a><br>​</p><p>M1芯片的软件适配现在问题还有点多，苹果用rosetta2来帮助度过软件的两年过渡期<br>​</p><p><code>每当用户使用专为配备 Intel 处理器的 Mac 电脑构建的 App 时，Rosetta 2 都会在后台运行。Rosetta 会自动转化 App 以便与 Apple 芯片搭配使用。</code><br>​</p><p>经过几天的使用，在渗透方面的使用问题倒不大，也不用担心arm的问题，经过测试只要能适配mac的工具，基本都能成功运行。一些exe的直接开个虚拟机装个win就能使用，实测在pd虚拟机操作win也是十分流畅。希望之后适配m1的软件更多吧。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>团队内网培训day2—NTLM认证和Kerbreros认证</title>
      <link href="/2022/01/12/%E5%9B%A2%E9%98%9F%E5%86%85%E7%BD%91%E5%9F%B9%E8%AE%ADday2%E2%80%94NTLM%E8%AE%A4%E8%AF%81%E5%92%8CKerbreros%E8%AE%A4%E8%AF%81/"/>
      <url>/2022/01/12/%E5%9B%A2%E9%98%9F%E5%86%85%E7%BD%91%E5%9F%B9%E8%AE%ADday2%E2%80%94NTLM%E8%AE%A4%E8%AF%81%E5%92%8CKerbreros%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="NTLM认证"><a href="#NTLM认证" class="headerlink" title="NTLM认证"></a>NTLM认证</h2><h3 id="1、什么是NTLM"><a href="#1、什么是NTLM" class="headerlink" title="1、什么是NTLM"></a>1、什么是NTLM</h3><p>NTLM是NT LAN Manager的缩写，这也说明了协议的来源。NTLM 是指 telnet 的一种验证身份方式，即质询/应答身份验证协议。</p><h3 id="2、NTLM发展"><a href="#2、NTLM发展" class="headerlink" title="2、NTLM发展"></a>2、NTLM发展</h3><p>NTLM的前身是LM Hash但是因为LM的加密算法密码长度最大只能为14个字符,而且容易被破解。所以为了解决LM加密和身份验证方案中固有的安全弱点，Microsoft 于1993年在Windows NT 3.1中引入了NTLM协议，也就是说从Windows Vista 和 Windows Server 2008开始，默认情况下只存储NTLM Hash，LM Hash将不再存在。</p><h3 id="3、NTLM认证方法"><a href="#3、NTLM认证方法" class="headerlink" title="3、NTLM认证方法"></a>3、NTLM认证方法</h3><p>NTLM认证主要有本地认证和网络认证两种方式<br><strong>本地认证</strong><br>本地登陆时用户密码存储在<strong>SAM</strong>文件中，可以把它当作一个存储密码的数据库，所有的操作都在本地进行的。它将用户输入的密码转换为<strong>NTLM</strong> Hash,然后与<strong>SAM</strong>中的<strong>NTLM Hash</strong>进行比较。<br>在本地登陆的情况下，操作系统会使用用户输入的密码作为凭据去与系统中的密<strong>​</strong>码进行校验，如果成功的话表明验证通过。操作系统的密码存储在C盘的目录下：%SystemRoot%\system32\config\sam<br><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641915896716-ddb2e8b5-8a8f-4649-bb07-43a54acb1536.png#clientId=uee01f1a8-77e5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=281&id=uec67df49&margin=%5Bobject%20Object%5D&name=image.png&originHeight=562&originWidth=899&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59821&status=done&style=none&taskId=ub2e50e11-29a6-408b-965c-9a7d12d9a72&title=&width=449.5" alt="image.png"><br><strong>NTLM Hash生成算法</strong><br>当用户输入密码Lawliet的时候，操作系统会将Lawliet转换为16进制，经过Unicode转换后，再调用MD4加密算法加密，这个加密结果的十六进制就是NTLM Hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lawliet -&gt; hex(16进制编码) = 4C61776C696574</span><br><span class="line">4C61776C696574 -&gt; Unicode = 4C00610077006C00690065007400</span><br><span class="line">4C00610077006C00690065007400 -&gt; MD4 = 69a4032d0d57528206dddcaa3560ca59</span><br></pre></td></tr></table></figure><p><strong>本地认证流程</strong><br>当用户注销、重启、锁屏后，操作系统会让winlogon显示登陆界面，当winlogon.exe接收到账号密码输入之后，会将密码交给lsass进程，这个进程会存一份明文密码，将明文密码加密成NTLM Hash，对SAM数据库比较认证。(winlogon.exe即Windows Logon Process，是Windows NT用户登陆程序，用于管理用户登录和退出。LSASS用于微软Windows系统的安全机制。它用于本地安全和登陆策略。)<br><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641917384187-7ed50211-3ef6-42fc-a799-ad1abab6b083.png#clientId=uee01f1a8-77e5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=287&id=ub4c866a3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=573&originWidth=725&originalType=binary&ratio=1&rotation=0&showTitle=false&size=332741&status=done&style=none&taskId=ud6b22985-ce19-4e61-a839-8209cfd3a2f&title=&width=362.5" alt="image.png"><br><strong>网络认证</strong><br>1、网络认证是一种Challenge/Response 验证机制，由三种消息组成:通常称为type1(协商)，类型type2(质询)和type3(身份验证)。<br>协商：主要用于确认双方协议版本、加密等级等（双方确定使用的协议版本，在NTLM认证中，NTLM响应分为NTLM v1，NTLMv2，NTLM session v2三种协议，不同协议使用不同格式的Challenge和加密算法）<br>质询：服务器在收到客户端的协商消息之后，会读取其中的内容，并从中选择出自己所能接受的服务内容，加密等级，安全服务等等。并生成一个随机数challenge, 然后生成challenge消息返回给客户端。该消息就是质询/响应认证机制的主要功能体现。<br>身份验证：验证主要是在挑战完成后，验证结果，是认证的最后一步。<br><strong>Windows Challenge/Response 认证过程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">客户端发送用户名到服务器</span><br><span class="line">客户端对明文口令进行Hash处理获得NTLM Hash</span><br><span class="line">服务器生成一个 16字节的随机数（Challenge）发送给客户端</span><br><span class="line">客户端使用NTLM Hash对Challenge进行加密，加密结果为Response-C，然后将结果发送给服务器</span><br><span class="line">服务器通过用户名检索到相对应的NTLM Hash并对Challenge进行加密得到Response-S。</span><br><span class="line">比较Response-S和从客户端接收到的Response-C，如果一致则认证通过。</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641918046683-90814a24-30de-4eaf-bf69-fe3094f25059.png#clientId=uee01f1a8-77e5-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=165&id=u79a506b1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=330&originWidth=781&originalType=binary&ratio=1&rotation=0&showTitle=false&size=77399&status=done&style=none&taskId=u90dee7fe-1402-4997-b2bf-ef3a1ff1e07&title=&width=390.5" alt="image.png"><br><strong>NTLM 协议 V1 与 V2的区别</strong><br>NTLM v1与NTLM v2最显著的区别就是Challenge与加密算法不同，共同点就是加密的原料都是NTLM Hash。 Challage:NTLM v1的Challenge有8位，NTLM v2的Challenge为16位。 Net-NTLM Hash:NTLM v1的主要加密算法是DES，NTLM v2的主要加密算法是HMAC-MD5。<br>​</p><h2 id="Kerbreros认证"><a href="#Kerbreros认证" class="headerlink" title="Kerbreros认证"></a>Kerbreros认证</h2><h3 id="1、什么是Kerbreros认证"><a href="#1、什么是Kerbreros认证" class="headerlink" title="1、什么是Kerbreros认证"></a>1、什么是Kerbreros认证</h3><p>Kerberos是一种网络认证协议，其设计目标是通过密钥系统为客户机/服务器应用程序提供强大的认证服务。该认证过程的实现不依赖于主机操作系统的认证，无需基于主机地址的信任，不要求网络上所有主机的物理安全，并假定网络上传送的数据包可以被任意地读取、修改和插入数据。在以上情况下，Kerberos 作为一种可信任的第三方认证服务，是通过传统的密码技术（如:共享密钥)执行认证服务的。</p><h3 id="2、域认证参与的角色"><a href="#2、域认证参与的角色" class="headerlink" title="2、域认证参与的角色"></a>2、域认证参与的角色</h3><ul><li><strong>Client</strong></li><li><strong>Server</strong></li><li><strong>KDC（</strong>密钥分发中心<strong>）</strong></li><li>AD（account database）：存储所有client的白名单，只有存在于白名单的client才能顺利申请到TGT</li><li>AS（Authentication Service）:为client生成TGT的服务，校验client的身份</li><li>TGS（Ticket Granting Service）:为client生成某个服务的ticket</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1642070416734-3dcfe03e-342d-4ace-ba10-fa5a0b5c9536.png#clientId=u4aa12785-815a-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=348&id=u5c56f267&margin=%5Bobject%20Object%5D&name=image.png&originHeight=696&originWidth=1013&originalType=binary&ratio=1&rotation=0&showTitle=false&size=347183&status=done&style=none&taskId=ue854aabf-aed4-4e2b-b988-4221c499d5d&title=&width=506.5" alt="image.png"></p><h3 id="3、域认证流程"><a href="#3、域认证流程" class="headerlink" title="3、域认证流程"></a>3、域认证流程</h3><p>看了这么多篇Kerbreros协议，讲得最细的就是这篇<a href="https://www.cnblogs.com/artech/archive/2007/07/05/807492.html">https://www.cnblogs.com/artech/archive/2007/07/05/807492.html</a><br>最通俗易懂的还是在知乎上看到的这篇<br><a href="https://www.zhihu.com/question/22177404">https://www.zhihu.com/question/22177404</a></p><p>很久很久以前，在<strong>Kerberos</strong>王国有一个神奇的王，它的名字叫<strong>KDC</strong>，国号为<strong>秦（域名）</strong>，为了更好地管理臣民（用户）、管理营业性场所（<a href="https://www.zhihu.com/search?q=%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1%E5%99%A8&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:492680179%7D">文件共享服务器</a>、邮件服务器、打印服务器等），要求臣民、营业性场所到王室领取一个账号，账号主要包括用户名/密码。<br>有一个臣民叫王老虎，账号名为“王老虎”，密码“xxxxxxxx”, 那么在<a href="https://www.zhihu.com/search?q=Kerberos%E7%8E%8B%E5%9B%BD&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:492680179%7D">Kerberos王国</a>里，有几个人知道<a href="https://www.zhihu.com/search?q=%E7%8E%8B%E8%80%81%E8%99%8E&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:492680179%7D">王老虎</a>的密码？<br>一个是王老虎本人，另一个就是王，即KDC。还有其他人知道吧？没有了！<br>有一家提供文件共享的服务场所，名字叫“小美共享文件服务社”，密码是“xxxxxxx”，这个账号的密码，在KDC王国，只有2个人知道，一个是自己，另外一个就是王，KDC。</p><p><strong>KDC王颁布以下规定：</strong><br><strong>（1）臣民去臣民家拜访，需要先到KDC票务中心买票，只有买到了被拜访者家的票（Service Ticket)，才能前往拜访。</strong><br><strong>（2）臣民前去营业场所消费，同样需要先到KDC购票入场。</strong><br><strong>（3）营业场所去营业场所消费，一样需要购票入场。</strong></p><p>现在王老虎想去“<a href="https://www.zhihu.com/search?q=%E5%B0%8F%E7%BE%8E%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E7%A4%BE&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:492680179%7D">小美文件服务社</a>”坐坐，并浏览一下文件，能直接冲进去吗？<br>不能。<br>​<br>王老虎先到KDC票务中心买票，票务中心说：请问你是哪位？</p><p>王老虎！<br>​<br>票务中心：请用王老虎的密钥加密“一段认证信息”发给我！</p><p>王老虎照做！</p><p>票务中心知道王老虎的密钥，成功解密王老虎的加密信息，认证成功！</p><p>上文说了，在这个世界上除了KDC知道王老虎的密钥，另外一个就是王老虎本人了。</p><p>既然KDC用王老虎的密钥解密成功，那说明加密信息的密钥肯定是王老虎的，间接表明买票的人，肯定是王老虎。<br>​<br>以上只是KDC验证王老虎的过程，问题来了，<strong>王老虎如何知道KDC票务中心不是假冒的？</strong></p><p>很简单，玄机就在“一段认证信息”里了，这“一段认证信息”里，王老虎想写啥就写啥，王老虎是这样写的：<br>​<br><strong>“知乎到底能走多远？”</strong><br>​<br>由于这段信息是用王老虎的密钥发给KDC的，如果KDC是真的，那么自然可以解密到明文信息，然后把王老虎的“知乎到底能走多远？”返回给王老虎，那么王老虎就知道对方是真的KDC。<br>​<br>双向认证成功，可以避免任何一方是假冒的安全风险。</p><p>既然认证成功，那么KDC就为王老虎出票呗。KDC给王老虎2件东西：<br><strong>(1）用王老虎密钥加密的session key</strong><br><strong>(2) “小美文件服务社”门票（Service Ticket)</strong><br>​<br>这个门票是用“小美文件服务社”的密钥加密，里面包含 :<br>​<br><strong>A) 和王老虎一样的session key</strong><br><strong>B) 门票持有人姓名：王老虎</strong><br><strong>C) 王老虎属于哪个Group</strong></p><p>上文1、2 中的session key 是一样的。</p><p>接下来王老虎就直奔小美处了，王老虎敲敲小美的门，小美说：先生请出示您的门票。</p><p>王老虎出示2样东西：<br><strong>（1）门票Ticket</strong><br><strong>（2）用session key加密“一段认证信息”，认证信息里写道：“美女，你会说相声不？”</strong><br>​<br>小美用自己的密钥解密ticket，得到上文ABC信息。<br>​<br>小美用解密得到的A = session key ，解密（2），得到明文认证信息：“美女，你会说相声不？”<br>​<br>小美对王老虎说：<strong>“美女，你会说相声不？”</strong></p><p>王老虎窃喜，看来这个小美不是假冒的，否则不可能知道我加密的认证信息！<br>​<br>至此，双向认证成功，接下来就使用双方都知道的session key 来加密/解密双向的流量，由于session key 只有KDC、王老虎、小美知晓，任何第三方都无法知晓session key，所以无法解密流量。<br>​<br>上文忘记说了，小美的每一个文件都具有权限管理，小美根据上文的C，可以知道王老虎属于哪个group，看看这个group有没有被访问文件的“ read 、write 、modify、full control”权限，并依据特定权限，限制王老虎操作文件的特权。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>团队内网培训day1—内网常见名词</title>
      <link href="/2022/01/11/%E5%9B%A2%E9%98%9F%E5%86%85%E7%BD%91%E5%9F%B9%E8%AE%ADday1%E2%80%94%E5%86%85%E7%BD%91%E5%B8%B8%E8%A7%81%E5%90%8D%E8%AF%8D/"/>
      <url>/2022/01/11/%E5%9B%A2%E9%98%9F%E5%86%85%E7%BD%91%E5%9F%B9%E8%AE%ADday1%E2%80%94%E5%86%85%E7%BD%91%E5%B8%B8%E8%A7%81%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>团队此前办了个对外内网培训的活动，当时考试周也没时间去完成任务，翻了翻资源还在，正好假期有空，把它完成一遍，当复习一下内网知识。</p><h3 id="内网常见名词解释"><a href="#内网常见名词解释" class="headerlink" title="内网常见名词解释"></a>内网常见名词解释</h3><h3 id="1、工作组"><a href="#1、工作组" class="headerlink" title="1、工作组"></a>1、工作组</h3><p><strong>工作组</strong> <code>Work Group</code> 是最常见最简单最普通的资源管理模式，就是将不同的电脑按功能分别列入不同的组中，以方便管理。</p><p>比如在一个网络内，可能有成百上千台工作电脑，如果这些电脑不进行分组，都列在“网上邻居”内，可想而知会有多么乱。</p><p>为了解决这一问题，Windows 9x/NT/2000 引用了“工作组”这个概念，比如一所高校，会分为诸如数学系、中文系之类的，然后数学系的电脑全都列入数学系的工作组中，中文系的电脑全部都列入到中文系的工作组中……如果你要访问某个系别的资源，就在“网上邻居”里找到那个系的工作组名，双击就可以看到那个系别的电脑了。</p><p>在工作组中所有的计算机都是平等的，没有管理与被管理之分，因此工作组网络也称为对等网络。</p><h5 id="工作组的加入和退出"><a href="#工作组的加入和退出" class="headerlink" title="工作组的加入和退出"></a><strong>工作组的加入和退出</strong></h5><h6 id="工作组的加入"><a href="#工作组的加入" class="headerlink" title="工作组的加入"></a><strong>工作组的加入</strong></h6><p>右击桌面上的“计算机”，在弹出的菜单出选择“属性”，点击“更改设置”，“更改”，在“计算机名”一栏中键入你想好的名称，在“工作组”一栏中键入你想加入的工作组名称。如果你输入的工作组名称网络中没有，那么相当于新建了一个工作组，当然暂时只有你的电脑在组内。单击“确定”按钮后，Windows提示需要重新启动，重新启动之后，再进入“网络”就可以看到你所加入的工作组成员了</p><h6 id="工作组的访问"><a href="#工作组的访问" class="headerlink" title="工作组的访问"></a><strong>工作组的访问</strong></h6><p>文件夹–&gt;网络，就可以查看到我们工作组中的其他计算机了，当你要访问某台计算机时，点击它，然后输入该主机的用户名和密码即可看到该主机共享的文件夹。</p><h6 id="工作组的优缺点"><a href="#工作组的优缺点" class="headerlink" title="工作组的优缺点"></a><strong>工作组的优缺点</strong></h6><p>优点：计算机通过工作组进行分类，使得我们访问资源更加具有层次化。工作组情况下资源可以相当随机和灵活的分布，更方便资源共享，管理员只需要实施相当低级的维护。</p><p>缺点：缺乏集中管理与控制的机制，没有集中的统一帐户管理，没有对资源实施更加高效率的集中管理，没有实施工作站的有效配置和安全性严密控制。只适合小规模用户的使用。</p><p>基于以上缺点，当计算机数量比较多，大型企业中网络规模大，需要统一的管理和集中的身份验证，并且能够给用户提供方便的搜索和使用网络资源的方式，工作组的组织形式就不合适了，于是域就出现了。</p><h3 id="2、域"><a href="#2、域" class="headerlink" title="2、域"></a>2、域</h3><p><strong>域</strong>：用来描述一种架构，和“工作组”相对应，由工作组升级而来的高级架构，域 (Domain)是一个有安全边界的计算机集合（ 安全边界，意思是在两个域中，一个域中的用户无法访问另一个域中的资源）。可以简单的把域理解成升级版的“工作组”，相比工作组而言，它有一个更加严格的安全管理控制机制，如果你想访问域内的资源，就必须拥有一个合法的身份登陆到该域中,而你对该域内的资源拥有什么样的权限,还需要取决于你在该域中的用户身份。</p><p><strong>域的功能和特点：</strong></p><ul><li>集中管理，可以集中地管理企业中成千上万分布于异地的计算机和用户</li><li>便捷的资源访问，能够很容易地定位到域中的资源。用户依次登录就可以访问整个网络资源，集中地身份验证</li><li>可扩展性，既可以适用于几十台计算机的小规模网络，也可以用于跨国公司</li></ul><p><strong>工作组和域的区别：</strong></p><p>工作组是对等网络，域是B/S架构，集中式管理</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844521700-5d3d46d2-c129-4cf3-a788-0e4af34e0c9f.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=256&id=u30e0f356&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=614&originWidth=1182&originalType=binary&ratio=1&rotation=0&showTitle=false&size=521374&status=done&style=none&taskId=ue74fff76-9c4f-439a-b03e-d8363840b7f&title=&width=492" alt="图片.png"></p><h4 id="域控DC-Domain-Control-："><a href="#域控DC-Domain-Control-：" class="headerlink" title="域控DC(Domain Control)："></a>域控DC(Domain Control)：</h4><p>在域架构中域控是用来管理所有客户端的服务器，它负责每一台联入的电脑和用户的验证工作，域内电脑如果想互相访问首先都得经过它的审核。域控是域架构的核心，每个域控制器上都包含了AD活动目录数据库。一个域中可能应该要有至少两个域控。一个作为DC，一个是备份DC。如果没有第二个备份DC，那么一旦DC瘫痪了，则域内的其他用户就不能登陆该域了，因为活动目录的数据库（包括用户的帐号信息）存储在DC中的。而有一台备份域控制器（BDC），则至少该域还能正常使用，期间把瘫痪的DC恢复了就行了。当域中的一台计算机安装了AD后，它就成了域控DC了。</p><h4 id="活动目录AD："><a href="#活动目录AD：" class="headerlink" title="活动目录AD："></a>活动目录AD：</h4><p><strong>活动目录AD</strong>是域环境中提供目录服务的组件。在活动目录中，所有的网络对象信息以一种结构化的数据存储方式来保存，使得管理员和用户能够轻松地查找和使用这些信息。活动目录以这种结构化的数据存储方式作为基础，对目录信息进行合乎逻辑的分层组织。活动目录存储着有关网络对象（如用户、组、计算机、共享资源、打印机和联系人等）的信息。目录服务是帮助用户快速准确从目录中查找到他所需要的信息的服务。安装有AD活动目录的服务器就是域控DC。</p><p>如果将企业的内网看成是一本字典，那么内网里的资源就是字典的内容， 活动目录就相当于字典的索引。即活动目录存储的是网络中所有资源的快捷方式，用户通过寻找快捷方式而定位资源。</p><p>在活动目录中记录的信息，被分为两大部分，一部分保存在活动目录数据库文件NTDS.dit 中，另一部分保存在被复制的文件系统上。</p><p><strong>Ntdsutil.exe</strong>是域控制器自带的域数据库管理工具，从windows Server 2008开始就默认自带了。因此我们可以通过ntdsutil.exe提取出域中所有的域用户信息。以下命令必须在域控上执行：</p><p><strong>逻辑结构</strong>在活动目录中，管理员可以完全忽略被管理对象的具体地理位置，而将这些对象按照一定的方式放置在不同的容器中。由于这种组织对象的做法不考虑被管理对象的具体地理位置，这种组织框架称为 “ <strong>逻辑结构</strong> ”。<br>活动目录的逻辑结构就包括上面讲到的 组织单元（ OU ）、域（ domain ）、域树（ tree ）、域森林（ forest ） 。在域树内的所有域共享一个活动目录，这个活动目录内的数据分散地存储在各个域内，且每一个域只存储该域内的数据。</p><p><strong>活动目录的主要功能</strong></p><ul><li>帐号集中管理：所有帐号均存在服务器上，方便对帐号的重命名/重置密码。</li><li>软件集中管理：统一推送软件，统一安装网络打印机等。利用软件发布策略分发软件,可以让用户自由选择安装软件。</li><li>环境集中管理：利用AD可以统一客户端桌面，IE，TCP/IP等设置。</li><li>增强安全性：统一部署杀毒软件和扫毒任务，集中化管理用户的计算机权限、统一制订用户密码策略等，可监控网络，资料统一管理。</li><li>更可靠：更少的宕机时间。如：利用AD控制用户访问权限，利用群集、负载均衡等技术对文件服务器进行容灾设定，更可靠，宕机时间更少。</li><li>活动目录为Microsoft统一管理的基础平台，其它 ISA、Exchange、SMS 等服务都依赖于这个基础平台。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844540520-d751fe10-0e1b-44a4-9e29-9618402cb3b2.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=284&id=u4d1e0da4&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=421&originWidth=697&originalType=binary&ratio=1&rotation=0&showTitle=false&size=211553&status=done&style=none&taskId=u755e4292-01ba-4ff6-8050-39d46279616&title=&width=469.5" alt="图片.png"></p><ul><li>Builtin容器：Builtin容器是Active Driectory默认创建的第一个容器，主要用于保存域中本地安全组。</li><li>Computers容器：Computers容器是Active Driectory默认创建的第2个容器，用于存放Windows Server 2008域内所有成员计算机的计算机账号。</li><li>Domain Controllers容器：Domain Controllers是一个特殊的容器，主要用于保存当前域控制器下创建的所有子域和辅助域。</li><li>Users容器：Users容器主要用于保存安装Active Driectory时系统自动创建的用户和登录到当前域控制器的所有用户账户。</li></ul><h4 id="DNS域名服务器"><a href="#DNS域名服务器" class="headerlink" title="DNS域名服务器"></a>DNS域名服务器</h4><ul><li>域控服务器要求DNS服务器按名称查找计算机、成员服务器和网络服务。</li><li>域名解析：DNS服务器通过其A记录将域名解析成IP地址</li><li>定位活动目录服务：客户机通过DNS服务器上的 SRV 服务记录定位提供某一个服务的计算机</li></ul><p>一般情况下，我们在内网渗透时就通过寻找DNS服务器来定位域控制器，因为通常DNS服务器和域控制器会处在同一台机器上。</p><p>SRV服务记录是DNS服务器的数据库中支持的一种资源记录的类型，它记录了哪台计算机提供了哪个服务这么一个简单的信息。</p><p><strong>SRV服务记录</strong>：一般是为活动目录 AD 设置的应用。DNS可以独立于活动目录，但是活动目录必须有DNS的帮助才能工作。为了活动目录能够正常的工作，DNS服务器必须支持服务定位（SRV）资源记录，资源记录把服务名字映射为提供服务的服务器名字。域主机和域控制器使用SRV资源记录决定域控制器的IP地址和提供服务的服务器IP地址。</p><h4 id="域结构"><a href="#域结构" class="headerlink" title="域结构"></a>域结构</h4><p><strong>单域</strong></p><p>在一般的具有固定地理位置的小公司里，建立一个域就可以满足所需。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844563388-e31e9377-0370-4445-a86d-6b9371b8b0df.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=307&id=u350a152a&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=609&originWidth=607&originalType=binary&ratio=1&rotation=0&showTitle=false&size=344583&status=done&style=none&taskId=ub24708c8-4612-49ae-a6a8-993aaf9e9f4&title=&width=305.5" alt="图片.png"></p><p><strong>域树</strong></p><p>域树指若干个域通过建立信任关系组成的集合。一个域管理员只能管理本域的内部，不能访问或者管理其他的域，二个域之间相互访问则需要建立 **信任关系 (Trust Relation)**。信任关系是连接在域与域之间的桥梁。父域与子域之间自动建立起了双向信任关系，域树内的父域与子域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理，以及相互通信和数据传输。同一个域树中，父域和子域会自动创建双向信任关系，并且信任关系可传递。所以也就是如下：abc.com 自动与 asia.abc.com 和 europe.abc.com 建立起了双向信任关系，asia.abc.com 和 cn.asia.abc.com以及 europe.abc.com 与 fr.asia.abc.com 自动建立起了双向信任关系。由于信任关系可以传递，所以cn.asia.abc.com和abc.com以及fr.asia.abc.com和abc.com都自动建立起了双向信任关系。但是 asia.abc.com 和 europe.abc.com 之间并没有建立起信任关系。所以也就是 asia.abc.com 和 europe.abc.com 之间不能进行数据共享等操作。他们之间要想进行数据共享等操作，需要手动为他们之间建立信任关系。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844579633-a2c433a2-5814-4c17-8cb0-fac09032385b.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=292&id=u8c418cc4&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=725&originWidth=1257&originalType=binary&ratio=1&rotation=0&showTitle=false&size=282671&status=done&style=none&taskId=ua53b30d5-8ac3-43a6-b9a5-cb079ee647d&title=&width=505.5" alt="图片.png"></p><p><strong>建立域树的好处：</strong></p><ul><li>如果把不同地理位置的分公司放在同一个域内，那么他们之间信息交互（包括同步，复制等）所花费的时间会比较长，而且占用的带宽也比较大。（因为在同一个域内，信息交互的条目是很多的，而且不压缩；而在域和域之间，信息交互的条目相对较少，而且压缩。）</li><li>还有一个好处，就是子公司可以通过自己的域来管理自己的资源。</li><li>还有一种情况，就是出于安全策略的考虑，因为每个域都有自己独有的安全策略。比如一个公司的财务部门希望能使用特定的安全策略（包括帐号密码策略等），那么可以将财务部门做成一个子域来单独管理</li></ul><p>在一个域树中，父域可以包含很多子域，子域是相对父域来说的，指域名中的每一个段。子域只能使用父域作为域名的后缀，也就是说在一个域树中，域的名字是连续的。</p><p><strong>父域与子域</strong></p><p>第一个域称为父域也可以叫根域 ，各分部的域称为该域的子域 。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844593676-f9c687d6-8882-445f-b002-5f48664995ff.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=260&id=u19b32d12&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=502&originWidth=647&originalType=binary&ratio=1&rotation=0&showTitle=false&size=153931&status=done&style=none&taskId=u3ad9bd14-d19c-46aa-b91c-3881ae145c1&title=&width=334.5" alt="图片.png"></p><p>父域与子域之间默认建立起了双向信任关系。</p><p><strong>域林</strong></p><p>由一个或多个没有形成连续名称空间的域树组成，林中每个域树都有唯一的名称空间，之间不连续。域林 指若干个域树通过建立信任关系组成的集合。可以通过域树之间建立的信任关系来管理和使用整个域林中的资源，从而又保持了原有域自身原有的特性。同一个林中，林根域与其他树根域自动建立双向信任关系. 信任关系可传递</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844608312-a6de74fe-bc44-4d03-8862-c5a17df6003c.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=279&id=u8bd7aafe&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=634&originWidth=1325&originalType=binary&ratio=1&rotation=0&showTitle=false&size=318521&status=done&style=none&taskId=u5869cb61-66fc-4275-a8dc-74a5c156c25&title=&width=583.5" alt="图片.png"></p><h4 id="域信任关系"><a href="#域信任关系" class="headerlink" title="域信任关系"></a><strong>域信任关系</strong></h4><p>域之间的信任关系，相当于是不同域之间沟通的桥梁。域信任分为 单向信任 和 双向信任。单向信任只能是受信任域访问信任域，而信任域不能访问受信任域。双向信任是两个域可以互相访问。</p><ul><li><strong>父子信任：</strong>父域与子域之间自动建立起了双向信任关系，并且信任关系可以传递。</li><li><strong>树信任：</strong>同一个林中，林根域与其他树根域自动建立双向信任关系。信任关系可传递。</li><li><strong>快捷方式信任</strong>：为了加速认证流程而产生的信任关系。需要管理员手工建立，信任关系可向下传递。</li><li><strong>林信任：</strong>在不更改AD结构的情况下，让不同林之间可以相互访问资源。信任关系可向下传递。</li><li><strong>外部信任/ 跨林快捷方式信任：</strong>类似于同林内的快捷方式信任. 单向, 信任关系不可传递：</li><li><strong>领域信任：</strong>为了让AD跟非windows系统的kerberos建立关系而存在的信任。</li></ul><h4 id="域的原理"><a href="#域的原理" class="headerlink" title="域的原理"></a><strong>域的原理</strong></h4><p>其实可以把域和工作组联系起来理解，在工作组上你一切的设置比如在本机上进行各种策略，用户登录都是登录在本机的，密码是放在本机的数据库来验证的。而如果你的计算机加入域的话，各种策略是域控制器统一设定，用户名和密码也是放到域控制器去验证，也就是说你的账号密码(域用户)可以在同一个域的任何一台计算机登录。</p><p>如果说工作组是“免费的旅店”，那么域（Domain）就是“星级的宾馆”；工作组可以随便出出进进，而域则需要严格控制。“域”的真正含义指的是服务器控制网络上的计算机能否加入计算机组合。一提到组合，势必需要严格的控制。所以实行严格的管理对网络安全是非常必要的。在对等网模式下，任何一台电脑只要接入网络，其他机器就都可以访问共享资源，如共享文件夹等。尽管对等网络上的共享文件可以加访问密码，但是非常容易被破解。</p><p>不过在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为<strong>域控制器</strong>（Domain Controller，简写为DC）。</p><p>域控制器中包含了这个域内的账户、密码、域内的计算机等信息构成的数据库(AD)。当电脑联入网络时，域控制器首先要鉴别这台电脑是否属于这个域，使用的登录账号是否存在、密码是否正确。如果以上信息有一样不正确，那么域控制器就会拒绝这个用户从这台电脑登录。不能登录，用户就不能访问服务器上有权限保护的资源，他只能以对等网用户的方式访问Windows共享出来的资源，这样就在一定程度上保护了网络上的资源。</p><p>要把一台电脑加入域，仅仅使它和服务器在网上邻居中能够相互“看”到是远远不够的，必须要由网络管理员进行相应的设置，把这台电脑加入到域中。这样才能实现文件的共享，集中统一，便于管理</p><p><strong>在域控上，即使以域管理员的身份登录，也不能查看域成员的密码，可以给域成员重置密码，但是不能查看到域成员的密码。</strong></p><h3 id="3、DMZ"><a href="#3、DMZ" class="headerlink" title="3、DMZ"></a>3、DMZ</h3><p><strong>DMZ</strong> <code>demilitarized zone</code> ，中文名为“隔离区”，或称“非军事化区”。它是为了解决安装防火墙后外部网络的访问用户不能访问内部网络服务器的问题，从而设立的一个非安全系统与安全系统之间的缓冲区。</p><p>DMZ 区可以理解为一个不同于外网或内网的特殊网络区域，DMZ 内通常放置一些不含机密信息的公用服务器，比如 WEB 服务器、E-Mail 服务器、FTP 服务器等。这样来自外网的访问者只可以访问 DMZ 中的服务，但不可能接触到存放在内网中的信息等，即使 DMZ 中服务器受到破坏，也不会对内网中的信息造成影响。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/12527156/1641844639896-5b675c9b-3b0c-4df6-a006-5618d51ab4e0.png#clientId=u1e281faf-a156-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=439&id=u3f148481&margin=%5Bobject%20Object%5D&name=%E5%9B%BE%E7%89%87.png&originHeight=762&originWidth=872&originalType=binary&ratio=1&rotation=0&showTitle=false&size=542380&status=done&style=none&taskId=u28c8d712-83e1-4b76-9e50-814f15614c8&title=&width=502" alt="图片.png"></p><h3 id="4、域内的各种权限"><a href="#4、域内的各种权限" class="headerlink" title="4、域内的各种权限"></a>4、域内的各种权限</h3><p>首先要理解一下组的概念，在组里包含了很多用户，当管理员想要给某个用户分配权限时，只需要将用户加入到对应权限的组里就行，从而提高了管理效率，常见的组有：域本地组、全局组、通用组。</p><p><strong>域本地组</strong></p><p>成员范围：所有的域；使用范围：自己所在的域</p><p><strong>全局组</strong></p><p>成员范围：自己所在的域；使用范围：所有的域</p><p><strong>通用组</strong></p><p>成员范围：所有的域；使用范围：所有的域</p><p><strong>A-G-DL-P 策略</strong></p><p>A-G-DL-P 策略是将用户账号添加到全局组中，将全局组添加到域本地组中，然后为域本地组分配资源权限。</p><ul><li>A 表示用户账号</li><li>G 表示全局组</li><li>U 表示通用组</li><li>DL 表示域本地组</li><li>P 表示资源权限</li></ul><h3 id="常见的内网结构"><a href="#常见的内网结构" class="headerlink" title="常见的内网结构"></a>常见的内网结构</h3><p>工作组: 都存在于网上邻居，不方便管理<br>域: 与工作组的“松散会员制”有所不同，“域”是一个相对严格的组织。“域”指的是服务器控制网络上的计算机能否加入的计算机组合。<br>域内又分：域控，父域于子域，域树，域林，活动目录<br>DMZ区域：介于外网与内网之间的一个特殊区域，也称隔离区，内部网络增加了一道安全防线，通常认为是非常安全的。它提供了一个区域放置公共服务器，能有效地避免一些互联应用需要公开，而与内部安全策略相矛盾的情况发生。<br>​</p><h3 id="工作组与域还有个人pc区别（攻击相关-权限相关）"><a href="#工作组与域还有个人pc区别（攻击相关-权限相关）" class="headerlink" title="工作组与域还有个人pc区别（攻击相关\权限相关）"></a>工作组与域还有个人pc区别（攻击相关\权限相关）</h3><p><strong>​</strong></p><p>工作组中所有计算机是平等关系，目的是拿到当前机器的system权限，攻击方法多数以pth传递，以及一些操作系统漏洞。<br>域是由多台计算机组成，结构为域控制器控制域内所有机器，目的是拿到域管理员权限。攻击方法pth传递，以及一些操作系统漏洞，还包括域内一些协议的攻击。<br>个人pc存储个人信息较多，在攻击中的目的尽可能寻找公司或个人信息进行钓鱼</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://mp.weixin.qq.com/s/2JdMRgA9TlCV5hwO6ihVWQ">https://mp.weixin.qq.com/s/2JdMRgA9TlCV5hwO6ihVWQ</a><br><a href="https://mp.weixin.qq.com/s/5wgCGHrE5MNsKvN9rChBsw">https://mp.weixin.qq.com/s/5wgCGHrE5MNsKvN9rChBsw</a><br><a href="https://mp.weixin.qq.com/s/bi-jSmRRvo777WjNrUM7OQ">https://mp.weixin.qq.com/s/bi-jSmRRvo777WjNrUM7OQ</a>  </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇</title>
      <link href="/2022/01/09/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
      <url>/2022/01/09/%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>好久之前就说要搭个博客记录一下自己的学习生活，由于自己太懒了，拖拖拉拉，硬是到了今天才把它搭出来。选择困难症，在挑选主题上也纠结了好久，不是太喜欢那种花里胡哨的界面，看了二十多个主题，最终在geek和cactus中选择了cactus。感觉这个圈子的分享精神还是十分重要的，今后也会在博客分享一些自己学到的知识、技巧。第一篇博客不知道写点啥，回顾一下自己的大学时光吧。</p><p>高考结束，选了一个离家千里的学校上学。想着今后当个开发程序员敲敲代码，就选了个计算机专业还可以的学校，之后偶然接触了安全，感觉十分有意思，因此进入了安全圈子。大一，各种摆烂，对自己大一的生活时光，印象就是在宿舍打游戏，跟舍友吹牛逼。现在想来，属实是有些荒废，整个大一的时光基本就没有学习充实自己。自己对信息安全这个专业，在高考前稍微了解过，不过并没有对此有什么感觉，记得自己是在大一下学期期末，学校举办了一个ctf比赛，当时对ctf的了解还处于韩商言的阶段，自己也去报名参加了一下，各种bp抓包，注入啥的，看得一脸懵逼。后续在大二的时候进入了一个信安社团，2020年9月，开始自己的安全学习之路。</p><p>初入社团，主要还是打ctf。10月份，跟着学长打了个奇安信杯省赛，当时基本没有打过多少ctf题，本着见见世面的想法就去参加了，做题全程百度，各种知识点基本没学过，百度就完事了。最后混了个三等奖，感觉有点水。打完比赛，终于意识到了自己有多菜了，打算开始努力学习。整个大二上，基本都是处于漏洞的学习过程中。自己可能对实战方向比较感兴趣，所以ctf也没怎么做，主要还是偏实战方向发展学习。后续通过学习了解到了各类src，就此开启了src的挖掘之路。</p><p>我在src的挖掘路线还是从公益src—&gt;教育src—&gt;企业src。这三类src的挖法还是比较不同的，在大二上的寒假，开始挖掘公益src，翻了翻漏洞盒子，也交了几百个漏洞了。公益还是比较简单一些，关注漏洞信息，看看一些oa，cms是否有爆出漏洞，找工具批量利用，就可以提交了。或者用awvs、xray等扫描器批量扫公益资产，也可以获取不少漏洞。教育src我是在2021年2月份开始挖，也提交上百个洞了，教育的挖法跟公益差不多，也是找通用批量打或者用扫描器扫。如果想单点挖掘，就得信息收集某个学校的学号、工号、泄露的身份证等信息，利用信息进后台、vpn进行后续渗透。这种效率比较低，一般是证书站就需要这样搞。当然大佬可以直接拿一套源码审计高危批量上分，不过代码能力不够的我还是做不到了。在教育src目标还是拿证书，挖了一个多月，拿了5、6张证书，后续学校开学，就没怎么搞了。在2021年8月份开始挖企业src，给企业挖掘漏洞是有赏金的，到目前为止，也赚了有6位数了，不用向父母要生活费的感觉还是很不错的。企业src的挖法就与公益跟教育有点区别了，企业src挖掘的主要漏洞还是逻辑漏洞，常规漏洞还是偏少。挖掘企业src还是得细心一些，数据包得认真观察，参数需要仔细分析，多对参数进行增删改，多熟悉公司业务，肯定会发现漏洞的。在挖src的这段时间以来，认识了很多师傅，在师傅们身上学到了很多东西，也感谢师傅们很耐心地教我技术，自己在安全这条路上也会坚持走下去。</p><p>下学期开学就是大三下了，自己可能之后还是想走红队方向，后面会加强自己在内网方面的学习，此前跟着小迪师傅的课程过了一遍，不过挖企业src是不让进行内网渗透的，因此基本没什么机会打内网，在内网方面的操作也生疏了，这个假期会再去梳理一遍，对一些知识点在原理方面进行深入学习。挖洞挖多了，就知道基础知识的重要性了，基础打得好，攻击面也就广了，学习是无止境的，愿自己戒骄戒躁，钻研下去。</p><p>努力点，惊喜就会多一点。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
